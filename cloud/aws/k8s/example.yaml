---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nginxpvc
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: auto-ebs-sc
  resources:
    requests:
      storage: 100Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      enableServiceLinks: false
      serviceAccount: nginx
      containers:
        - name: webapp
          image: nginx
          ports:
            - name: http
              containerPort: 8080
          # command: ["echo"]
          # args: ["$(hostname -s)", ">", "/var/www/html/index.html"]              
          # resources:
          #   requests:
          #     memory: "100Mi"
          #     cpu: 0.5
          #   limits:
          #     memory: "100Mi"
          #     cpu: 0.5
          # livenessProbe:
          #   httpGet:
          #     path: /health
          #     port: 8080
          #   initialDelaySeconds: 60
          #   periodSeconds: 5
          #   failureThreshold: 3
          #   timeoutSeconds: 2
          envFrom:
            - configMapRef:
                name: nginx
            - secretRef:
                name: nginx
          volumeMounts:
            - name: www
              mountPath: /var/www/html
      volumes:
        - name: www
          persistentVolumeClaim:
            claimName: nginxpvc
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nginx
  labels:
    app: nginx
automountServiceAccountToken: false
---
apiVersion: v1
kind: Secret
metadata:
  name: nginx
type: Opaque
data:
  chave1: "dmFsb3Ix"
  chave2: "dmFsb3Iy"
  chave3: "dmFsb3Iz"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx
data:
  chave1: "valor1"
  chave2: "valor2"
  chave3: "valor3"
  chave4: "valor4"
---
apiVersion: v1
kind: Service
metadata:
  name: http-nginx
  labels:
    app: nginx
spec:
   selector:
     app: nginx
   ports:
     - name: http
       port: 80
       targetPort: http
   type: LoadBalancer
# ---
# apiVersion: autoscaling/v1
# kind: HorizontalPodAutoscaler
# metadata:
#   name: nginx
# spec:
#   scaleTargetRef:
#     apiVersion: apps/v1
#     kind: Deployment
#     name: nginx
#   minReplicas: 3
#   maxReplicas: 9
#   targetCPUUtilizationPercentage: 70
# ---
# apiVersion: networking.k8s.io/v1
# kind: NetworkPolicy
# metadata:
#   name: http-nginx
# spec:
#   podSelector:
#     matchLabels:
#       app: nginx
#   policyTypes:
#   - Ingress
#   ingress:
#   - from:
#     ports:
#     - protocol: TCP
#       port: 8080
